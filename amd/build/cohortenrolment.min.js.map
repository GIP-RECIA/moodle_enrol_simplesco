{"version":3,"sources":["../src/cohortenrolment.js"],"names":["SELECTORS","BUTTON_TRIGGER","BUTTON_COLLAPSE","BUTTON_LOADMORE","BUTTON_ENROL","BUTTON_SEARCH","FIELD_TYPE","FIELD_ROLES","FIELD_DURATION","FIELD_SEARCH","FIELD_STARTDATE","FIELD_COHORT_GROUP","AREA_RESULTS","ESCOCohortEnrolment","options","course_id","instance","start_dates","role_default","init","triggerButtons","Promise","all","component","key","ModalFactory","create","type","types","DEFAULT","large","then","values","strings","modal","setTitle","body","setBody","setFooter","getRoot","on","ModalEvents","hidden","require_refresh","location","reload","bindEvents","populateRoles","updateStartDateList","updateDurationsList","catch","Notification","exception","document","addEventListener","event","target","closest","preventDefault","show","getBody","find","trigger","classList","toggle","search","which","cohortid","attr","enrol","parameters","id","sesskey","M","cfg","action","enrolid","groupeid","val","role","startdate","duration","recovergrades","$","ajax","url","wwwroot","method","dataType","data","build_querystring","success","result","error","enrol_count","addClass","resultat","statut","erreur","beforeSend","startLoading","always","stopLoading","assignales_roles","length","updateRolesList","response","cohort","count","cohort_html","name","groups","append","page","perpage","enrolcount","remove","html","replace","totalcohorts","group","line","cohorts","renderCohort","hide","select","i","selected","when","text","config"],"mappings":"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","sourcesContent":["'use strict';\n/**\n * ESCO Enrolment AMD module.\n *\n * @module     enrol_simplesco/cohortenrolment\n * @package    enrol_simplesco\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport {get_string, get_strings} from 'core/str';\nimport Notification from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nconst SELECTORS = {\n    BUTTON_TRIGGER: \"button#enrol_simplesco_addcohort\",\n    BUTTON_COLLAPSE: '.collapsible .ftoggler a',\n    BUTTON_LOADMORE: 'button[data-toggle=\"load-more\"]',\n    BUTTON_ENROL: 'button[data-toggle=\"enrol\"]',\n    BUTTON_SEARCH: 'button#search',\n    FIELD_TYPE: 'input[name=\"enrol_simplesco_typesearch\"]',\n    FIELD_ROLES: 'select#enrol_simplesco_assignable_roles',\n    FIELD_DURATION: 'select#enrol_simplesco_assignable_duration',\n    FIELD_SEARCH: 'input#enrolusersearch',\n    FIELD_STARTDATE: 'select#enrol_simplesco_assignable_startdate',\n    FIELD_COHORT_GROUP: 'select[name=\"cohort_group\"]',\n    AREA_RESULTS: \"div#results\",\n};\n\nclass ESCOCohortEnrolment {\n    /** @var {array} */\n    strings = null;\n    /** @var {Modal} modal */\n    modal = null;\n    /** @var {number} page - */\n    page = 0;\n    /** @var {number} perpage - */\n    perpage = 25;\n    /** @var {number} course_id - */\n    course_id = 0;\n    /** @var {number} role_default - */\n    role_default = 0;\n    /** @var {boolean} enrol_count - */\n    enrol_count = 0;\n    /** @var {array} assignales_roles - */\n    assignales_roles = [];\n    /** @var {array} instance - */\n    instance = [];\n    /** @var {array} start_dates - */\n    start_dates = [];\n    /** @var {array} groups - */\n    groups = [];\n    /** @var {boolean} require_refresh - */\n    require_refresh = false;\n\n    constructor(options) {\n        this.course_id = options.course_id;\n        this.instance = options.instance;\n        this.start_dates = options.start_dates;\n        this.role_default = options.role_default;\n        this.init();\n    }\n\n    init() {\n        const triggerButtons = $(SELECTORS.BUTTON_TRIGGER);\n\n        Promise.all([\n            get_strings([\n                {component: 'enrol_simplesco', key: 'enrolcohorttitle'}, // 0\n                {component: 'enrol_simplesco', key: 'btnclosecohort'},\n                {component: 'role', key: 'assignroles'},\n                {component: 'enrol', key: 'none'},\n                {component: 'enrol', key: 'enrolmentoptions'},\n                {component: 'moodle', key: 'startingfrom'},\n                {component: 'enrol', key: 'enrolperiod'},\n                {component: 'enrol', key: 'unlimitedduration'},\n                {component: 'enrol_simplesco', key: 'searchoption'},\n                {component: 'enrol', key: 'usersearch'},\n                {component: 'enrol_simplesco', key: 'noresultliste'}, // 10\n                {component: 'enrol_simplesco', key: 'allresultliste'},\n                {component: 'enrol_simplesco', key: 'ajaxxcohortfound'},\n                {component: 'enrol', key: 'ajaxnext25'},\n                {component: 'enrol', key: 'enrol'},\n                {component: 'enrol_simplesco', key: 'cohort'},\n                {component: 'enrol_cohort', key: 'addgroup'},\n            ]),\n            ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                large: true,\n            }, triggerButtons)])\n        .then(values => {\n            this.strings = values[0];\n            this.modal = values[1];\n\n            this.modal.setTitle(this.strings[0]);\n\n            const body = `<div class=\"form-inline mform simplesco\">\n            <div class=\"form-group\">\n            <label for=\"enrol_simplesco_assignable_roles\">${this.strings[2]} : </label>\n            <select id=\"enrol_simplesco_assignable_roles\"><option value=\"\">${this.strings[3]}</option></select>\n            </div>\n            <fieldset class=\"collapsible collapsed\" id=\"enrolment_options\">\n            <legend class=\"ftoggler\"><a href=\"#\" class=\"fheader\" role=\"button\" aria-controls=\"enrolment_options\" \n                aria-expanded=\"false\">${this.strings[4]}</a></legend>\n            <div class=\"fcontainer\">\n            <div class=\"startdate form-group\"><label for=\"enrol_simplesco_assignable_startdate\">${this.strings[5]}:</label> \n                <select id=\"enrol_simplesco_assignable_startdate\"></select></div>\n            <div class=\"duration form-group\"><label for=\"enrol_simplesco_assignable_duration\">${this.strings[6]} :</label> \n                <select id=\"enrol_simplesco_assignable_duration\"><option value=\"0\" selected=\"selected\">${this.strings[7]}\n                </option></select></div>\n            </div>\n            </fieldset>\n            <fieldset class=\"collapsible collapsed\" id=\"enrolment_searchs\">\n            <legend class=\"ftoggler\"><a href=\"#\" class=\"fheader\" role=\"button\" aria-controls=\"enrolment_options\" \n            aria-expanded=\"false\">${this.strings[8]}</a></legend>\n            <div class=\"fcontainer\">\n            <label for=\"enrolusersearch\">${this.strings[9]} :</label> <input type=\"text\" id=\"enrolusersearch\" value=\"\" \n                class=\"form-control\"/>\n            <div class=\"text-center\"><button class=\"btn btn-primary\" id=\"search\"> ${this.strings[9]}</button></div>\n            </div>\n            </fieldset>\n            <div id=\"results\"></div>\n            <div id=\"loading\" style=\"display:none;\">CHARGEMENT</div>\n            </div>`;\n\n            this.modal.setBody(body);\n\n            this.modal.setFooter(`<button class=\"btn btn-primary\" data-action=\"hide\">${this.strings[1]}</button>`);\n\n            this.modal.getRoot().on(ModalEvents.hidden, () => {\n                if (this.require_refresh) {\n                    location.reload();\n                }\n            });\n\n            this.bindEvents();\n            this.populateRoles();\n            this.updateStartDateList();\n            this.updateDurationsList();\n        })\n        .catch(Notification.exception);\n    }\n\n    /**\n     * Bind events needed for the modal to work\n     */\n    bindEvents() {\n        document.addEventListener('click', event => {\n            if (event.target.closest(SELECTORS.BUTTON_TRIGGER)) {\n                event.preventDefault();\n                this.modal.show();\n                this.modal.getBody().find(SELECTORS.BUTTON_SEARCH).trigger(\"click\");\n                return;\n            }\n        });\n        this.modal.getBody().find(SELECTORS.BUTTON_COLLAPSE).on(\"click\", (event) => {\n            event.preventDefault();\n            event.target.closest(\".collapsible\").classList.toggle('collapsed');\n            return false;\n        });\n        this.modal.getBody().find(SELECTORS.BUTTON_SEARCH).on(\"click\", (event) => {\n            event.preventDefault();\n            this.search();\n            return false;\n        });\n        this.modal.getBody().find(SELECTORS.FIELD_SEARCH).on(\"keypress\", (event) => {\n            if (event.which === 13) {\n                event.preventDefault();\n                this.search();\n                return false;\n            }\n        });\n        this.modal.getBody().on(\"click\", SELECTORS.BUTTON_LOADMORE, (event) => {\n            event.preventDefault();\n            this.search(true);\n            return false;\n        });\n        this.modal.getBody().on(\"click\", SELECTORS.BUTTON_ENROL, (event) => {\n            event.preventDefault();\n            const cohortid = $(event.target).attr(\"value\");\n            this.enrol(cohortid);\n            return false;\n        });\n    }\n\n    /**\n     * Enrol the given userid\n     */\n    enrol(cohortid) {\n        const parameters = {\n            id: this.course_id,\n            sesskey: M.cfg.sesskey,\n            action: 'enrolcohort',\n            enrolid: this.instance.id,\n            cohortid : cohortid,\n            groupeid : this.modal.getBody().find(SELECTORS.FIELD_COHORT_GROUP + '[rel=\"'+cohortid+'\"]').val(),\n            role : this.modal.getBody().find(SELECTORS.FIELD_ROLES).val(),\n            startdate : this.modal.getBody().find(SELECTORS.FIELD_STARTDATE).val(),\n            duration : this.modal.getBody().find(SELECTORS.FIELD_DURATION).val(),\n            recovergrades : 0,\n        };\n        $.ajax({\n            url: M.cfg.wwwroot + '/enrol/simplesco/ajax.php',\n            method: 'POST',\n            dataType: 'json',\n            data: build_querystring(parameters),\n            success: (result, statut) => {\n                if (result.error) {\n                    return Notification.exception(result);\n                }\n                this.require_refresh = true;\n                this.enrol_count++;\n                this.modal.getBody().find(SELECTORS.AREA_RESULTS).find(`div.cohort[rel=\"'${cohortid}\"]`).addClass(\"enrolled\");\n            },\n            error: (resultat, statut, erreur) => {\n                Notification.exception(erreur);\n            },\n            beforeSend : () => {\n                this.startLoading();\n            }\n        }).always(() => {\n            this.stopLoading();\n        });\n    }\n\n    /**\n     * Load the list of roles from the database for given course\n     */\n    populateRoles() {\n        if (this.assignales_roles.length > 0) {\n            return this.updateRolesList();\n        }\n        $.ajax({\n            url: M.cfg.wwwroot + '/enrol/ajax.php',\n            method: 'POST',\n            dataType: 'json',\n            data: 'id=' + this.course_id + '&action=getassignable&sesskey=' + M.cfg.sesskey,\n            success: (result, statut) => {\n                if (result.error) {\n                    return Notification.exception(result);\n                }\n                this.assignales_roles = result.response;\n                this.updateRolesList();\n            },\n            error: (resultat, statut, erreur) => {\n                Notification.exception(erreur);\n            },\n            beforeSend: () => {\n                this.startLoading();\n            }\n        }).always(() => {\n            this.stopLoading();\n        });\n    }\n\n    /**\n     * Generate HTML for cohort display\n     */\n    renderCohort(cohort) {\n        const count = this.modal.getBody().find(SELECTORS.AREA_RESULTS).find(\".cohort\").length;\n        let cohort_html = `<div class=\"cohort item clearfix\" rel=\"${cohort.id}\">\n            <div class=\"count\">${count}</div>\n            <div class=\"details\">\n            <div class=\"fullname\">${cohort.name}</div>\n            </div>\n            <div class=\"options\">\n            <select name=\"cohort_group\" rel=\"${cohort.id}\">`;\n\n        for (let id in this.groups) {\n            cohort_html += `<option value=\"${id}\">${this.groups[id]}</option>`;\n        }\n\n        cohort_html += `</select>\n            <button class=\"btn btn-success\" data-toggle=\"enrol\" value=\"${cohort.id}\">\n                ${this.strings[14]}</button>\n            </div>\n            </div>`;\n\n        return cohort_html;\n    }\n\n    /**\n     * Send the send request to server(s) and then process the results\n     */\n    search(append) {\n        if (append) {\n            this.page++;\n        } else {\n            this.page = 0;\n        }\n        const parameters = {\n            id: this.course_id,\n            sesskey: M.cfg.sesskey,\n            action: 'searchcohorts',\n            search: this.modal.getBody().find(SELECTORS.FIELD_SEARCH).val(),\n            page: this.page,\n            perpage: this.perpage,\n            enrolcount: this.enrol_count,\n            enrolid: this.instance.id,\n        };\n        this.modal.getBody().find(SELECTORS.AREA_RESULTS).find('button[data-toggle=\"load-more\"]').remove();\n        $.ajax({\n            url: M.cfg.wwwroot + '/enrol/simplesco/ajax.php',\n            method: 'POST',\n            dataType: 'json',\n            data: build_querystring(parameters),\n            success: (result, statut) => {\n                if (result.error) {\n                    return Notification.exception(result);\n                }\n                if (!append) {\n                    this.modal.getBody().find(SELECTORS.AREA_RESULTS).html(\"\");\n                    this.modal.getBody().find(SELECTORS.AREA_RESULTS)\n                        .append('<div class=\"total_results\">' + this.strings[12].replace(\"{$a}\",\n                            result.response.totalcohorts) + '</div>');\n                    this.modal.getBody().find(SELECTORS.AREA_RESULTS)\n                        .append('<div class=\"item cohort clearfix\"><div class=\"count\">N°</div><div class=\"details\">'\n                            + this.strings[14] + '</div><div class=\"options\">' + this.strings[15] + '</div></div>');\n                }\n                this.groups = result.response.group;\n                for (let line in result.response.cohorts) {\n                    const cohort = result.response.cohorts[line];\n                    this.modal.getBody().find(SELECTORS.AREA_RESULTS).append(this.renderCohort(cohort));\n                }\n                const count = (this.modal.getBody().find(SELECTORS.AREA_RESULTS).find(\".item\").length - 1);\n                if (count < result.response.totalcohorts) {\n                    this.modal.getBody().find(SELECTORS.AREA_RESULTS)\n                        .append('<div class=\"text-center\"><button class=\"btn btn-secondary\" data-toggle=\"load-more\">'\n                            + this.strings[13] + '</button></div>');\n                }\n            },\n            error: (resultat, statut, erreur) => {\n                Notification.exception(erreur);\n            },\n            beforeSend: () => {\n                this.startLoading();\n            }\n        }).always(() => {\n            this.stopLoading();\n        });\n    }\n\n    /**\n     * Display the loading screen\n     */\n    startLoading() {\n        this.modal.getBody().find(\"#loading\").show();\n    }\n\n    /**\n     * Show the loading screen\n     */\n    stopLoading() {\n        this.modal.getBody().find(\"#loading\").hide();\n    }\n\n    /**\n     * Update the roles select field\n     */\n    updateRolesList() {\n        const select = this.modal.getBody().find(SELECTORS.FIELD_ROLES);\n        for (let i in this.assignales_roles) {\n            const selected = (this.role_default == this.assignales_roles[i].id) ? 'selected=\"selected\"' : \"\";\n            $(select).append('<option value=\"' + this.assignales_roles[i].id + '\" '+ selected + '>' + this.assignales_roles[i].name\n                + '</option>');\n        }\n    }\n\n    /**\n     * Update the durations select field\n     */\n    updateDurationsList() {\n        const select = this.modal.getBody().find(SELECTORS.FIELD_DURATION);\n\n        $.when(get_string('durationdays', 'enrol', '{a}')).then((text) => {\n            for (let i = 1; i <= 365; i++) {\n                $(select).append('<option value=\"' + i + '\">' + text.replace('{a}', i) + '</option>');\n            }\n        });\n    }\n\n    /**\n     * Update the start date select field\n     */\n    updateStartDateList() {\n        const select = this.modal.getBody().find(SELECTORS.FIELD_STARTDATE);\n\n        for (let i in this.start_dates) {\n            $(select).append('<option value=\"' + i + '\">' + this.start_dates[i] + '</option>');\n        }\n    }\n\n}\n\nexport const init = config => {\n    (new ESCOCohortEnrolment(config));\n};"],"file":"cohortenrolment.min.js"}