{"version":3,"sources":["../src/choiceenrolment.js"],"names":["SELECTORS","BUTTON_TRIGGER","ESCOChoiceEnrolment","options","contextid","init","triggerButtons","Array","from","document","querySelectorAll","forEach","button","remove","Promise","all","key","component","ModalFactory","create","type","types","DEFAULT","then","values","strings","modal","setTitle","body","setBody","on","hide","catch","Notification","exception","addEventListener","event","target","closest","preventDefault","show","config"],"mappings":"uIAAA,a,+DASA,OAEA,OACA,O,wfAEMA,CAAAA,CAAS,CAAG,CACdC,cAAc,CAAE,gEADF,C,CAIZC,C,YASF,WAAYC,CAAZ,CAAqB,4BAPX,IAOW,oBALV,CAKU,iBAFb,IAEa,EACjB,KAAKC,SAAL,CAAiBD,CAAO,CAACC,SAAzB,CACA,KAAKC,IAAL,EACH,C,sCAEM,YACGC,CAAc,CAAG,cAAEN,CAAS,CAACC,cAAZ,CADpB,CAEHM,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,mCAA1B,CAAX,EAA2EC,OAA3E,CAAmF,SAAAC,CAAM,CAAI,CACzFA,CAAM,CAACC,MAAP,EACH,CAFD,EAIAC,OAAO,CAACC,GAAR,CAAY,CACR,kBAAY,CACR,CAACC,GAAG,CAAE,aAAN,CAAqBC,SAAS,CAAE,iBAAhC,CADQ,CAER,CAACD,GAAG,CAAE,cAAN,CAAsBC,SAAS,CAAE,iBAAjC,CAFQ,CAGR,CAACD,GAAG,CAAE,gBAAN,CAAwBC,SAAS,CAAE,iBAAnC,CAHQ,CAAZ,CADQ,CAMRC,UAAaC,MAAb,CAAoB,CAChBC,IAAI,CAAEF,UAAaG,KAAb,CAAmBC,OADT,CAApB,CAEGhB,CAFH,CANQ,CAAZ,EASCiB,IATD,CASM,SAAAC,CAAM,CAAI,CACZ,CAAI,CAACC,OAAL,CAAeD,CAAM,CAAC,CAAD,CAArB,CACA,CAAI,CAACE,KAAL,CAAaF,CAAM,CAAC,CAAD,CAAnB,CAEA,CAAI,CAACE,KAAL,CAAWC,QAAX,CAAoB,CAAI,CAACF,OAAL,CAAa,CAAb,CAApB,EAEA,GAAMG,CAAAA,CAAI,sFAA6E,CAAI,CAACH,OAAL,CAAa,CAAb,CAA7E,oHACqE,CAAI,CAACA,OAAL,CAAa,CAAb,CADrE,aAAV,CAGA,CAAI,CAACC,KAAL,CAAWG,OAAX,CAAmBD,CAAnB,EAEA,cAAE,MAAF,EAAUE,EAAV,CAAa,OAAb,CAAsB,kEAAtB,CAA0F,UAAM,CAC5F,CAAI,CAACJ,KAAL,CAAWK,IAAX,EACH,CAFD,CAGH,CAvBD,EAwBCC,KAxBD,CAwBOC,UAAaC,SAxBpB,EA2BAzB,QAAQ,CAAC0B,gBAAT,CAA0B,OAA1B,CAAmC,SAAAC,CAAK,CAAI,CACxC,GAAIA,CAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBtC,CAAS,CAACC,cAA/B,CAAJ,CAAoD,CAChDmC,CAAK,CAACG,cAAN,GACA,CAAI,CAACb,KAAL,CAAWc,IAAX,EAEH,CACJ,CAND,CAOH,C,uBAGe,QAAPnC,CAAAA,IAAO,CAAAoC,CAAM,CAAI,CACzB,GAAIvC,CAAAA,CAAJ,CAAwBuC,CAAxB,CACJ,C","sourcesContent":["'use strict';\n/**\n * ESCO Enrolment AMD module.\n *\n * @module     enrol_simplesco/choiceenrolment\n * @package    enrol_simplesco\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport {get_strings} from 'core/str';\nimport Notification from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\n\nconst SELECTORS = {\n    BUTTON_TRIGGER: \".enrolusersbutton.enrol_simplesco_plugin.enrol [type='submit']\",\n};\n\nclass ESCOChoiceEnrolment {\n    /** @var {array} */\n    strings = null;\n    /** @var {number} courseid - */\n    courseid = 0;\n\n    /** @var {Modal} modal */\n    modal = null;\n\n    constructor(options) {\n        this.contextid = options.contextid;\n        this.init();\n    }\n\n    init() {\n        const triggerButtons = $(SELECTORS.BUTTON_TRIGGER);\n        Array.from(document.querySelectorAll(\".singlebutton.enrol_manual_plugin\")).forEach(button => {\n            button.remove();\n        });\n\n        Promise.all([\n            get_strings([\n                {key: 'choisetitle', component: 'enrol_simplesco'},\n                {key: 'btnenroluser', component: 'enrol_simplesco'},\n                {key: 'btnenrolcohort', component: 'enrol_simplesco'},\n            ]),\n            ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n            }, triggerButtons)])\n        .then(values => {\n            this.strings = values[0];\n            this.modal = values[1];\n\n            this.modal.setTitle(this.strings[0]);\n\n            const body = `<button class=\"btn btn-primary btn-block\" id=\"enrol_simplesco_adduser\">${this.strings[1]}</button>\n                <button class=\"btn btn-primary btn-block\" id=\"enrol_simplesco_addcohort\">${this.strings[2]}</button>`;\n\n            this.modal.setBody(body);\n\n            $('body').on('click', 'button#enrol_simplesco_adduser, button#enrol_simplesco_addcohort', () => {\n                this.modal.hide();\n            });\n        })\n        .catch(Notification.exception);\n\n\n        document.addEventListener('click', event => {\n            if (event.target.closest(SELECTORS.BUTTON_TRIGGER)) {\n                event.preventDefault();\n                this.modal.show();\n                return;\n            }\n        });\n    }\n}\n\nexport const init = config => {\n    (new ESCOChoiceEnrolment(config));\n};"],"file":"choiceenrolment.min.js"}